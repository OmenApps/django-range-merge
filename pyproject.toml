[build-system]
requires = ["setuptools>=75.2"]
build-backend = "setuptools.build_meta"

[project]
name = "django-range-merge"
version = "2024.10.1"
description = "Enables the range_merge Aggregate for Django on Postgres. range_merge 'Computes the smallest range that includes ... the given ranges'."
authors = [{ name = "Jack Linke", email = "jacklinke@gmail.com" }]
license = { text = "MIT" }
readme = "README.md"
classifiers = [
    "Environment :: Web Environment",
    "Framework :: Django",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Framework :: Django :: 5.1",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Database",
]
requires-python = ">=3.10,<4.0"
dependencies = ["django>=4.2.15"]

[project.urls]
Homepage = "https://github.com/OmenApps/django-range-merge"
Repository = "https://github.com/OmenApps/django-range-merge"
Changelog = "https://github.com/OmenApps/django-range-merge/releases"

[tool.uv]
dev-dependencies = [
    "psycopg2-binary>=2.9.9",
    "Pygments>=2.18.0",
    "bandit>=1.7.8",
    "black>=24.4.2",
    "coverage[toml]>=7.5.1",
    "darglint>=1.8.1",
    "flake8==7.0.0",
    "flake8-bugbear>=24.4.26",
    "flake8-docstrings>=1.7.0",
    "flake8-rst-docstrings>=0.3.0",
    "furo>=2024.8.6",
    "isort>=5.13.2",
    "nox>=2024.4.15",
    "pep8-naming>=0.14.1",
    "pre-commit>=3.7.1",
    "pre-commit-hooks>=4.6.0",
    "pytest>=8.3.3",
    "pytest-cov>=5.0.0",
    "pytest-django>=4.9.0",
    "pyupgrade>=3.15.2",
    "safety>=3.2.0",
    "sphinx>=8.0.2",
    "sphinx-autobuild>=2024.4.16",
    "sphinx-click>=6.0.0",
    "xdoctest[colors]>=1.1.3",
    "myst-parser>=4.0.0",
    "django-environ>=0.4.5",
    "psycopg2-binary>=2.9.9",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
django_range_merge = ["templates/django_range_merge/*"]

[tool.black]
line-length = 120
target-version = ["py310", "py311", "py312", "py313"]
force-exclude = '''
(
  .nox
)
'''

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["example_project", "*/example_project"]

[tool.coverage.run]
branch = true
source = ["src", "example_project"]

[tool.coverage.report]
show_missing = true
fail_under = 50
omit = [".nox/*", "example_project/*", "**/migrations/*", "**/__init__.py"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "example_project.settings"
python_files = ["*test_*.py", "*_test.py", "example_project/*.py"]
log_cli = true
log_cli_level = "INFO"
# addopts = ["-v", "--nomigrations", "--reuse-db"]

[tool.isort]
profile = "black"
force_single_line = true
lines_after_imports = 2
extend_skip = [".nox"]
